{"version":3,"sources":["../src/datasource.js"],"names":[],"mappings":"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","file":"datasource.js","sourcesContent":["import _ from \"lodash\";\n\nexport class GenericDatasource {\n\n  constructor(instanceSettings, $q, backendSrv, templateSrv) {\n    this.type = instanceSettings.type;\n    this.url = instanceSettings.url;\n    this.name = instanceSettings.name;\n    this.q = $q;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n  }\n\n  // Called once per panel (graph)\n  query(options) {\n    var query = this.buildQueryParameters(options);\n    query.targets = query.targets.filter(t => !t.hide);\n\n    if (query.targets.length <= 0) {\n      return this.q.when({data: []});\n    }\n    var endpoint = '';\n    if(typeof query.targets[0].variable !== \"undefined\" && query.targets[0].variable !== \"select variable\") {\n      endpoint = '/v2/grafana/net/2/query?';\n      endpoint += 'name='+query.targets[0].variable;\n      if(typeof query.targets[0].device !== \"undefined\" && query.targets[0].device !== \"select device\") {\n        endpoint += '&devices='+query.targets[0].device;\n      }\n      if(typeof query.targets[0].component !== \"undefined\" && query.targets[0].component !== \"select component\") {\n        endpoint += '&components='+query.targets[0].component;\n      }\n        if(typeof query.targets[0].tagFacet !== \"undefined\" && query.targets[0].tagFacet !== \"select tag facet\" && typeof query.targets[0].tagWord !== \"undefined\" && query.targets[0].tagWord !== \"select tag name\") {\n            var tagOperation = \"\";\n            if(typeof query.targets[0].tagOperation !== \"undefined\"){\n                if(query.targets[0].tagOperation == \"<>\"){\n                    tagOperation = \"!\";\n                }\n            }\n            endpoint += '&tags=' + tagOperation + query.targets[0].tagFacet + '.' + query.targets[0].tagWord + '&tagMatch=AND';\n        }\n        console.log(query);\n        var queryJson = '{\"targets\": [{\"variable\": \"variable_name_1\",\"device\": \"device_name_1\",\"component\": \"component_name_1\",\"tagFacet\": \"facet_1\",\"tagWord\":  \"word_1\",\"tagOperation\": \"tag_match_op\"},{\"variable\": \"variable_name_2\",\"device\": \"device_name_2\",\"component\": \"component_name_2\",\"tagFacet\": \"facet_2\",\"tagWord\":  \"word_2\",\"tagOperation\": \"tag_match_op\"}],\"from\": \"-10min\",\"until\": \"now\"}';\n      var test = JSON.parse(queryJson);\n        // console.log(query.targets);\n\n\n\n        var queryObject =  {\n                targets: Array(),\n                from: \"-6h\",\n                until: \"now\"\n        };\n\n        query.targets.forEach(myFunction);\n\n        function myFunction(item, index) {\n            var temp = {};\n            if(typeof item.variable !== \"undefined\" && item.variable !== \"select variable\") {\n                temp.variable = item.variable;\n            }\n            if(typeof item.device !== \"undefined\" && item.device !== \"select device\") {\n                temp.device = item.device;\n            }\n            if(typeof item.component !== \"undefined\" && item.component !== \"select component\") {\n                temp.component = item.component;\n            }\n            if(typeof item.tagFacet !== \"undefined\" && item.tagFacet !== \"select tag facet\" && typeof item.tagFacet !== \"undefined\" && item.tagFacet !== \"select tag facet\" && typeof item.tagOperation !== \"undefined\" && typeof item.tagWord !== \"undefined\" && item.tagWord !== \"select tag name\") {\n\n                temp.tags = [{\n                    tagFacet : item.tagFacet,\n                    tagOperation : item.tagOperation,\n                    tagWord : item.tagWord\n                }]\n            }\n            queryObject.targets.push(temp);\n        }\n\n        queryObject.from = query.rangeRaw.from;\n        queryObject.until = query.rangeRaw.to;\n        var data = JSON.stringify(queryObject);\n        console.log(data);\n        return this.backendSrv.datasourceRequest({\n        url: this.url + endpoint,\n        data: data,\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n    else {\n      return '';\n    }\n  }\n\n  // Required\n  // Used for testing datasource in datasource configuration pange\n  testDatasource() {\n    return this.backendSrv.datasourceRequest({\n      url: this.url + '/',\n      method: 'GET'\n    }).then(response => {\n      if (response.status === 200) {\n        return { status: \"success\", message: \"Data source is working\", title: \"Success\" };\n      }\n    });\n  }\n\n  annotationQuery(options) {\n    var query = this.templateSrv.replace(options.annotation.query, {}, 'glob');\n    var annotationQuery = {\n      range: options.range,\n      annotation: {\n        name: options.annotation.name,\n        datasource: options.annotation.datasource,\n        enable: options.annotation.enable,\n        iconColor: options.annotation.iconColor,\n        query: query\n      },\n      rangeRaw: options.rangeRaw\n    };\n\n    return this.backendSrv.datasourceRequest({\n      url: this.url + '/annotations',\n      method: 'POST',\n      data: annotationQuery\n    }).then(result => {\n      return result.data;\n    });\n  }\n\n  // Optional\n  // Required for templating\n  metricFindCategoryQuery(options) {\n    return this.backendSrv.datasourceRequest({\n      url: this.url + '/v2/grafana/net/2/catalog/categories/list',\n      data: options,\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' }\n    }).then(this.mapToTextValue);\n  }\n  metricFindVariableQuery(options) {\n    var endpoint = '/v2/grafana/net/2/catalog/categories/';\n    if(options.category !== 'select category'){\n      endpoint += options.category;\n    }\n    return this.backendSrv.datasourceRequest({\n      url: this.url + endpoint,\n      data: options,\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' }\n    }).then(this.mapToTextValue);\n  }\n  metricFindDeviceQuery(options) {\n    var endpoint = '';\n    if(options.category !== 'select category' && options.variable !== 'select variable'){\n        endpoint = '/v2/grafana/net/2/catalog/devices?name=' + options.variable;\n        if(options.component !== 'select component'){\n            endpoint += '&components=' + options.component;\n        }\n    }\n    return this.backendSrv.datasourceRequest({\n      url: this.url + endpoint,\n      data: options,\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' }\n    }).then(this.mapToTextValue);\n  }\n  metricFindComponentQuery(options) {\n      var endpoint = '';\n      if(options.category !== 'select category' && options.variable !== 'select variable'){\n          endpoint = '/v2/grafana/net/2/catalog/components?name=' + options.variable;\n          if(options.devices !== 'select device'){\n              endpoint += '&devices=' + options.device;\n          }\n      }\n    return this.backendSrv.datasourceRequest({\n      url: this.url + endpoint,\n      data: options,\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' }\n    }).then(this.mapToTextValue);\n  }\n  metricFindTagFacetQuery(options) {\n      var endpoint = '';\n      if(options.category !== 'select category' && options.variable !== 'select variable'){\n          endpoint = '/v2/grafana/net/2/catalog/tags/facets?name=' + options.variable;\n          if(options.device !== 'select device'){\n              endpoint += '&devices=' + options.device;\n          }\n          if(options.component !== 'select component'){\n              endpoint += '&components=' + options.component;\n          }\n      }\n    return this.backendSrv.datasourceRequest({\n      url: this.url + endpoint,\n      data: options,\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' }\n    }).then(this.mapToTextValue);\n  }\n    metricFindTagOperationQuery(options) {\n      var endpoint = '';\n      if(options.category !== 'select category' && options.variable !== 'select variable'){\n          endpoint = '/v2/grafana/net/2/catalog/tags/facets?name=' + options.variable;\n          if(options.device !== 'select device'){\n              endpoint += '&devices=' + options.device;\n          }\n          if(options.component !== 'select component'){\n              endpoint += '&components=' + options.component;\n          }\n      }\n    return this.backendSrv.datasourceRequest({\n      url: this.url + endpoint,\n      data: options,\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' }\n    }).then(this.mapToTextValue);\n  }\n    metricFindTagWordQuery(options) {\n        var endpoint = '';\n        if(options.category !== 'select category' && options.variable !== 'select variable' && options.tagFacet !== 'select tag facet'){\n            endpoint = '/v2/grafana/net/2/catalog/tags/' + options.tagFacet + '?name=' + options.variable;\n            if(options.device !== 'select device'){\n                endpoint += '&devices=' + options.device;\n            }\n            if(options.component !== 'select component'){\n                endpoint += '&components=' + options.component;\n            }\n        }\n        return this.backendSrv.datasourceRequest({\n            url: this.url + endpoint,\n            data: options,\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' }\n        }).then(this.mapToTextValue);\n    }\n\n  mapToTextValue(result) {\n    return _.map(result.data, (d, i) => {\n      return { text: d, value: i};\n    });\n  }\n\n  buildQueryParameters(options) {\n    //remove placeholder targets\n    // options.targets = _.filter(options.targets, target => {\n    //   return target.target !== 'select metric';\n    // });\n\n    var targets = _.map(options.targets, target => {\n      return {\n          category: this.templateSrv.replace(target.category),\n          variable: this.templateSrv.replace(target.variable),\n          device: this.templateSrv.replace(target.device),\n          component: this.templateSrv.replace(target.component),\n          tagFacet: this.templateSrv.replace(target.tagFacet),\n          tagOperation: this.templateSrv.replace(target.tagOperation),\n          tagWord: this.templateSrv.replace(target.tagWord),\n        refId: target.refId,\n        hide: target.hide\n      };\n    });\n\n    options.targets = targets;\n\n    return options;\n  }\n}\n"]}