{"version":3,"sources":["../src/datasource.js"],"names":[],"mappings":"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","file":"datasource.js","sourcesContent":["import _ from \"lodash\";\n\n\nexport class GenericDatasource {\n\n\n    constructor(instanceSettings, $q, backendSrv, templateSrv) {\n        this.type = instanceSettings.type;\n        this.url = instanceSettings.url;\n        this.name = instanceSettings.name;\n        this.q = $q;\n        this.backendSrv = backendSrv;\n        this.templateSrv = templateSrv;\n        this.networkId = instanceSettings.jsonData.networkId || 1;\n        this.accessToken = (instanceSettings.jsonData.useToken !== false && instanceSettings.jsonData.accessToken !== undefined && instanceSettings.jsonData.accessToken !== '') ? '?access_token='+instanceSettings.jsonData.accessToken :'';\n        this.endpoints = {};\n        this.endpoints.category = '/v2/grafana/net/' + this.networkId + '/catalog/categories/list' + this.accessToken;\n        this.endpoints.variable = '/v2/grafana/net/' + this.networkId + '/catalog/categories/';\n        this.endpoints.device = '/v2/grafana/net/' + this.networkId + '/catalog/devices' + this.accessToken;\n        this.endpoints.component = '/v2/grafana/net/' + this.networkId + '/catalog/components' + this.accessToken;\n        this.endpoints.tagFacet = '/v2/grafana/net/' + this.networkId + '/catalog/tags/facets' + this.accessToken;\n        this.endpoints.query = '/v2/grafana/net/' + this.networkId + '/query' + this.accessToken;\n        this.endpoints.test = '/v2/grafana/net/' + this.networkId + '/test' + this.accessToken;\n\n\n        this.targetName = {};\n        this.targetName.variable = 'select variable';\n        this.targetName.device = 'select device';\n        this.targetName.component = 'select component';\n        this.targetName.sortByEl = 'select sorting';\n        this.targetName.selector = 'select selector';\n        this.targetName.limit = 'select limit';\n        this.targetName.group = 'select group';\n        this.targetName.tagFacet = 'select tag facet';\n        this.targetName.tagWord = 'select tag name';\n        this.targetName.interval = 'select interval';\n\n        this.clearString = '-- clear selection --';\n    }\n\n\n    buildNewData(item) {\n        var temp = {};\n        for (var key in item) {\n            if (key in this.targetName || key == 'tagData') {\n                if (typeof item[key] !== 'undefined' && item[key] !== this.clearString && item[key] !== this.targetName[key]) {\n                    if (key !== 'tagFacet' && key !== 'tagWord') {\n                        if (key == 'tagData') {\n                            var result = [];\n                            item[key].forEach(tagsLoop);\n                            function tagsLoop(singleItem, index) {\n                                if (singleItem.tagFacet !== \"\" && singleItem.tagFacet !== \"select tag facet\" && singleItem.tagWord !== \"\" && singleItem.tagFacet !== \"select tag name\") {\n                                    result.push({\n                                        tagFacet: singleItem.tagFacet,\n                                        tagOperation: singleItem.tagOperation,\n                                        tagWord: singleItem.tagWord\n                                    });\n                                }\n                            }\n\n                            if (result.length > 0) {\n                                temp.tags = result;\n                            }\n                        } else {\n                            temp[key] = item[key];\n                        }\n                    }\n                }\n            }\n        }\n        return temp;\n    }\n\n\n    buildQuery(options) {\n        var query = this.buildQueryParameters(options);\n        query.targets = query.targets.filter(t => !t.hide);\n        var queryObject = {\n            targets: []\n        };\n        var temp;\n        if (query.targets.length <= 0) {\n            temp = this.buildNewData(query);\n            queryObject.targets.push(temp);\n        } else {\n            var index;\n            for (index = query.targets.length - 1; index >= 0; --index) {\n                temp = this.buildNewData(query.targets[index]);\n                queryObject.targets.push(temp);\n            }\n            queryObject.from = query.rangeRaw.from;\n            queryObject.until = query.rangeRaw.to;\n            queryObject.groupByTime = query.interval;\n        }\n        var data = JSON.stringify(queryObject);\n        return data;\n    }\n\n\n    query(options) {\n        var data = this.buildQuery(options);\n        var temp = JSON.parse(data);\n        console.log(data);\n        if (temp.targets.filter(function (target) {\n                return typeof target.variable !== \"undefined\" && target.variable !== \"select variable\";\n            }).length > 0) {\n            var endpoint = this.endpoints.query;\n            return this.backendSrv.datasourceRequest({\n                url: this.url + endpoint,\n                data: data,\n                method: 'POST',\n                headers: {'Content-Type': 'application/json'}\n            });\n        } else {\n            return null;\n        }\n    }\n\n\n    // Required\n    // Used for testing datasource in datasource configuration page\n    testDatasource() {\n        var endpoint = this.endpoints.test;\n        return this.backendSrv.datasourceRequest({\n            url: this.url + endpoint,\n            method: 'GET'\n        }).then(response => {\n            if (response.status === 200) {\n                return {status: \"success\", message: \"Data source is working\", title: \"Success\"};\n            }\n        });\n    }\n\n\n    annotationQuery(options) {\n        var query = this.templateSrv.replace(options.annotation.query, {}, 'glob');\n        var annotationQuery = {\n            range: options.range,\n            annotation: {\n                name: options.annotation.name,\n                datasource: options.annotation.datasource,\n                enable: options.annotation.enable,\n                iconColor: options.annotation.iconColor,\n                query: query\n            },\n            rangeRaw: options.rangeRaw\n        };\n        return this.backendSrv.datasourceRequest({\n            url: this.url + '/annotations' + this.accessToken,\n            method: 'POST',\n            data: annotationQuery\n        }).then(result => {\n            return result.data;\n        });\n    }\n\n\n    metricFindQuery(options, name) {\n        var data = this.buildQuery(options);\n        var endpoint = this.endpoints[name];\n        return this.backendSrv.datasourceRequest({\n            url: this.url + endpoint,\n            data: data,\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'}\n        }).then(this.mapToTextValue);\n    }\n\n\n    metricFindCategoryQuery() {\n        return this.backendSrv.datasourceRequest({\n            url: this.url + this.endpoints.category,\n            data: '',\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'}\n        }).then(this.mapToTextValue);\n    }\n\n\n    metricFindVariableQuery(options) {\n        var endpoint = this.endpoints.variable + options.category + this.accessToken;\n        return this.backendSrv.datasourceRequest({\n            url: this.url + endpoint,\n            data: '',\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'}\n        }).then(this.mapToTextValue);\n    }\n\n\n    metricFindTagWordQuery(options) {\n        var endpoint = '/v2/grafana/net/' + this.networkId + '/catalog/tags/' + options.tagFacet + this.accessToken;\n        var data = this.buildQuery(options);\n        return this.backendSrv.datasourceRequest({\n            url: this.url + endpoint,\n            data: data,\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'}\n        }).then(this.mapToTextValue);\n    }\n\n\n    mapToTextValue(result) {\n        return _.map(result.data, (d, i) => {\n            return {text: d, value: i};\n        });\n    }\n\n\n    buildQueryParameters(options) {\n\n\n        var targets = _.map(options.targets, target => {\n            return {\n                category: this.templateSrv.replace(target.category),\n                variable: this.templateSrv.replace(target.variable),\n                device: this.templateSrv.replace(target.device),\n                component: this.templateSrv.replace(target.component),\n                sortByEl: this.templateSrv.replace(target.sortByEl),\n                selector: this.templateSrv.replace(target.selector),\n                limit: this.templateSrv.replace(target.limit),\n                tagFacet: this.templateSrv.replace(target.tagFacet),\n                tagOperation: this.templateSrv.replace(target.tagOperation),\n                tagWord: this.templateSrv.replace(target.tagWord),\n                refId: target.refId,\n                hide: target.hide,\n                tagData: target.tagData\n            };\n        });\n\n\n        options.targets = targets;\n\n\n        return options;\n    }\n}"]}