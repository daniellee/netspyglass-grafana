{"version":3,"sources":["../src/query_ctrl.js"],"names":[],"mappings":"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","file":"query_ctrl.js","sourcesContent":["import {QueryCtrl} from 'app/plugins/sdk';\nimport './css/query-editor.css!'\n\nexport class GenericDatasourceQueryCtrl extends QueryCtrl {\n\n    constructor($scope, $injector, uiSegmentSrv) {\n        super($scope, $injector);\n\n        this.scope = $scope;\n        this.uiSegmentSrv = uiSegmentSrv;\n        this.clearSelection = '-- clear selection --';\n        this.target.category = this.target.category || 'select category';\n        this.target.variable = this.target.variable || 'select variable';\n        this.target.device = this.target.device || 'select device';\n        this.target.component = this.target.component || 'select component';\n        this.target.sortByEl = this.target.sortByEl || 'select sorting';\n        this.target.selector = this.target.selector || 'select selector';\n        this.target.limit = this.target.limit || 'select limit';\n        this.target.group = this.target.group || 'select group';\n        this.target.tagFacet = this.target.tagFacet || 'select tag facet';\n        this.target.tagOperation = this.target.tagOperation || '==';\n        this.target.tagWord = this.target.tagWord || 'select tag name';\n        this.target.tagData = this.target.tagData ||\n        [{\n            tagFacet : '',\n            tagWord : '',\n            tagOperation : '=='\n        }];\n        this.temp = '';\n    }\n\n    tagDataAdd() {\n        this.target.tagData[this.target.tagData.length] = {\n            tagFacet : this.target.tagData.length,\n            tagWord : '',\n            tagOperation : '=='\n        };\n        this.panelCtrl.refresh();\n    }\n\n    tagDataRemove(index) {\n        this.target.tagData.splice(index,1);\n        this.panelCtrl.refresh();\n    }\n\n    getCategories() {\n        return this.datasource.metricFindCategoryQuery(this.target)\n            .then(this.transformToSegments(this.target.category, 'select category'));\n        // Options have to be transformed by uiSegmentSrv to be usable by metric-segment-model directive\n    }\n\n    transformToSegments(element, addTemplateVars) {\n        return (results) => {\n            var segments = _.map(results, segment => {\n                return this.uiSegmentSrv.newSegment({ value: segment.text, expandable: segment.expandable });\n            });\n\n            if (element !== addTemplateVars) {\n                segments.unshift(this.uiSegmentSrv.newSegment({ fake: true, value: this.clearSelection, html: addTemplateVars}));\n            }\n\n            var temp = segments[0].html;\n            return segments;\n        };\n    }\n\n    testRemove() {\n        this.target.variable = 'select variable';\n        this.getVariables();\n        this.panelCtrl.refresh();\n    }\n\n    getVariables() {\n        return this.datasource.metricFindVariableQuery(this.target)\n            .then(this.transformToSegments(this.target.variable,'select variable'));\n        // Options have to be transformed by uiSegmentSrv to be usable by metric-segment-model directive\n    }\n\n    getDevices() {\n        return this.datasource.metricFindDeviceQuery(this.target)\n            .then(this.transformToSegments(this.target.device,'select device'));\n        // Options have to be transformed by uiSegmentSrv to be usable by metric-segment-model directive\n    }\n\n    getComponents() {\n        return this.datasource.metricFindComponentQuery(this.target)\n            .then(this.transformToSegments(this.target.component,'select component'));\n        // Options have to be transformed by uiSegmentSrv to be usable by metric-segment-model directive\n    }\n\n    getTagsFacet() {\n        return this.datasource.metricFindTagFacetQuery(this.target)\n            .then(this.transformToSegments(this.target.tagFacet,'select tag facet'));\n        // Options have to be transformed by uiSegmentSrv to be usable by metric-segment-model directive\n    }\n\n    getTagsOperation() {\n        return this.datasource.metricFindTagOperationQuery(this.target)\n            .then(this.transformToSegments(false));\n        // Options have to be transformed by uiSegmentSrv to be usable by metric-segment-model directive\n    }\n\n    getTagsWord() {\n        return this.datasource.metricFindTagWordQuery(this.target)\n            .then(this.transformToSegments(this.target.tagWord,'select tag name'));\n        // Options have to be transformed by uiSegmentSrv to be usable by metric-segment-model directive\n    }\n\n    addAdditionalTags(param) {\n        this.target.tagOperation = param;\n        this.panelCtrl.refresh();\n    }\n\n    toggleEditorMode() {\n        this.target.rawQuery = !this.target.rawQuery;\n    }\n\n    onChangeInternalCategory() {\n        if(this.target.category == this.clearSelection) {\n            this.target.category = 'select category';\n        }\n        this.panelCtrl.refresh(); // Asks the panel to refresh data.\n    }\n    onChangeInternalVariable() {\n        if(this.target.variable == this.clearSelection) {\n            this.target.variable = 'select variable';\n        }\n        this.panelCtrl.refresh(); // Asks the panel to refresh data.\n    }\n    onChangeInternalDevice() {\n        if(this.target.device == this.clearSelection) {\n            this.target.device = 'select device';\n        }\n        this.panelCtrl.refresh(); // Asks the panel to refresh data.\n    }\n    onChangeInternalComponent() {\n        if(this.target.component == this.clearSelection) {\n            this.target.component = 'select component';\n        }\n        this.panelCtrl.refresh(); // Asks the panel to refresh data.\n    }\n    \n\n    onChangeInternalTagFacet(index) {\n        if(this.target.tagFacet == this.clearSelection){\n            this.target.tagFacet = 'select tag facet';\n        }\n        this.target.tagData[index].tagFacet = this.target.tagFacet;\n        this.panelCtrl.refresh(); // Asks the panel to refresh data.\n    }\n\n    onChangeInternalTagWord(index) {\n        if(this.target.tagWord == this.clearSelection){\n            this.target.tagWord = 'select tag name';\n        }\n        this.target.tagData[index].tagWord = this.target.tagWord;\n        this.panelCtrl.refresh(); // Asks the panel to refresh data.\n    }\n\n    tagOperation(index, operation) {\n        this.target.tagData[index].tagOperation = operation;\n        this.panelCtrl.refresh(); // Asks the panel to refresh data.\n    }\n\n    setSortByEl(element) {\n        this.target.sortByEl = element;\n        this.panelCtrl.refresh(); // Asks the panel to refresh data.\n    }\n\n    setSelector(element) {\n        this.target.selector = element;\n        this.panelCtrl.refresh(); // Asks the panel to refresh data.\n    }\n\n    setLimit() {\n        if (this.target.limit == '') {\n            if(this.temp !== ''){\n                this.target.limit = this.temp;\n            }\n            else {\n                this.target.limit = 'select limit';\n            }\n        }\n        this.panelCtrl.refresh(); // Asks the panel to refresh data.\n    }\n\n    setGroup() {\n        if (this.target.group == '') {\n            if(this.tempNew !== ''){\n                this.target.group = this.tempNew;\n            }\n            else {\n                this.target.group = 'select group';\n            }\n        }\n        this.panelCtrl.refresh(); // Asks the panel to refresh data.\n    }\n\n\n}\n\nGenericDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html';\n\n"]}