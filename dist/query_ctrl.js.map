{"version":3,"sources":["../src/query_ctrl.js"],"names":[],"mappings":"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","file":"query_ctrl.js","sourcesContent":["import {QueryCtrl} from 'app/plugins/sdk';\nimport './css/query-editor.css!'\n\nexport class GenericDatasourceQueryCtrl extends QueryCtrl {\n\n    constructor($scope, $injector, uiSegmentSrv) {\n        super($scope, $injector);\n\n        this.scope = $scope;\n        this.uiSegmentSrv = uiSegmentSrv;\n        this.target.category = this.target.category || 'select category';\n        this.target.variable = this.target.variable || 'select variable';\n        this.target.device = this.target.device || 'select device';\n        this.target.component = this.target.component || 'select component';\n        this.target.tagFacet = this.target.tagFacet || 'select tag facet';\n        this.target.tagOperation = this.target.tagOperation || '==';\n        this.target.tagWord = this.target.tagWord || 'select tag name';\n        this.tagblocks = new Array('tags_1');\n        this.tagArray = {\n            tags_1 : {\n                tagFacet : '',\n                tagWord : '',\n                tagOperation : '=='\n            }\n        };\n        this.counter = 1;\n    }\n\n    addTagBlock() {\n        console.log('array_add');\n        console.log(this.tagblocks);\n        var len = this.tagblocks.length;\n        var name = 'tags_' + (this.counter++);\n        this.tagblocks.push('tags_' + (this.counter++));\n        this.tagArray[name] = {\n            tagFacet : '',\n            tagWord : '',\n            tagOperation : '=='\n        };\n        this.panelCtrl.refresh();\n    }\n\n    removeTagBlock(element) {\n        var index = this.tagblocks.indexOf(element);\n        if (index > -1) {\n            this.tagblocks.splice(index, 1);\n        }\n        delete this.tagArray[name];\n        console.log('array_rmove');\n        console.log(this.tagblocks);\n        console.log('obj_rmove');\n        console.log(this.tagArray);\n        this.panelCtrl.refresh();\n    }\n\n    getCategories() {\n        return this.datasource.metricFindCategoryQuery(this.target)\n            .then(this.uiSegmentSrv.transformToSegments(false));\n        // Options have to be transformed by uiSegmentSrv to be usable by metric-segment-model directive\n    }\n\n    getVariables() {\n        return this.datasource.metricFindVariableQuery(this.target)\n            .then(this.uiSegmentSrv.transformToSegments(false));\n        // Options have to be transformed by uiSegmentSrv to be usable by metric-segment-model directive\n    }\n\n    getDevices() {\n        return this.datasource.metricFindDeviceQuery(this.target)\n            .then(this.uiSegmentSrv.transformToSegments(false));\n        // Options have to be transformed by uiSegmentSrv to be usable by metric-segment-model directive\n    }\n\n    getComponents() {\n        return this.datasource.metricFindComponentQuery(this.target)\n            .then(this.uiSegmentSrv.transformToSegments(false));\n        // Options have to be transformed by uiSegmentSrv to be usable by metric-segment-model directive\n    }\n\n    getTagsFacet() {\n        return this.datasource.metricFindTagFacetQuery(this.target)\n            .then(this.uiSegmentSrv.transformToSegments(false));\n        // Options have to be transformed by uiSegmentSrv to be usable by metric-segment-model directive\n    }\n\n    getTagsOperation() {\n        return this.datasource.metricFindTagOperationQuery(this.target)\n            .then(this.uiSegmentSrv.transformToSegments(false));\n        // Options have to be transformed by uiSegmentSrv to be usable by metric-segment-model directive\n    }\n\n    getTagsWord() {\n        return this.datasource.metricFindTagWordQuery(this.target)\n            .then(this.uiSegmentSrv.transformToSegments(false));\n        // Options have to be transformed by uiSegmentSrv to be usable by metric-segment-model directive\n    }\n\n    addAdditionalTags(param) {\n        this.target.tagOperation = param;\n        this.panelCtrl.refresh();\n    }\n\n    toggleEditorMode() {\n        this.target.rawQuery = !this.target.rawQuery;\n    }\n\n    onChangeInternal() {\n        this.panelCtrl.refresh(); // Asks the panel to refresh data.\n    }\n\n    onChangeInternalTagFacet(element) {\n        console.log(this.tagArray);\n        console.log(element);\n        this.tagArray[element].tagFacet = this.target.tagFacet;\n        console.log('options');\n        console.log(this.tagArray);\n        this.panelCtrl.refresh(); // Asks the panel to refresh data.\n    }\n\n    onChangeInternalTagWord(element) {\n        this.tagArray[element].tagWord = this.target.tagWord;\n        console.log('options');\n        console.log(this.tagArray);\n        this.panelCtrl.refresh(); // Asks the panel to refresh data.\n    }\n}\n\nGenericDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html';\n\n"]}