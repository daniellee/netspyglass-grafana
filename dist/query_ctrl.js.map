{"version":3,"sources":["../src/query_ctrl.js"],"names":[],"mappings":"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","file":"query_ctrl.js","sourcesContent":["import {QueryCtrl} from 'app/plugins/sdk';\nimport './css/query-editor.css!'\n\nexport class NetSpyGlassDatasourceQueryCtrl extends QueryCtrl {\n\n    constructor($scope, $injector, uiSegmentSrv) {\n        super($scope, $injector);\n\n        this.scope = $scope;\n        this.uiSegmentSrv = uiSegmentSrv;\n        this.clearSelection = '-- clear selection --';\n        this.target.category = this.target.category || 'select category';\n        this.target.variable = this.target.variable || 'select variable';\n        this.target.device = this.target.device || 'select device';\n        this.target.component = this.target.component || 'select component';\n        this.target.sortByEl = this.target.sortByEl || 'none';\n        this.target.selector = this.target.selector || 'choose selector';\n        this.target.limit = this.target.limit || '';\n        this.target.group = this.target.group || 'select group';\n        this.target.tagFacet = this.target.tagFacet || 'select tag facet';\n        this.target.tagOperation = this.target.tagOperation || '==';\n        this.target.tagWord = this.target.tagWord || 'select tag word';\n        this.target.alias = this.target.alias || '';\n        this.target.tagData = this.target.tagData || [];\n\n        this.target.resultFormat = this.target.resultFormat || 'time_series';\n        this.target.resultFormatDisplay = this.target.resultFormatDisplay || 'Time Series';\n\n        this.target.columns = this.target.columns || 'time,variable,device,component,metric';\n    }\n\n    isCategorySelected() {\n        return this.target.category !== 'select category' && this.target.category !== '-- clear selection --';\n    }\n\n    isVariableSelected() {\n        return this.target.variable !== 'select variable' && this.target.variable !== '-- clear selection --';\n    }\n\n    tagDataAdd() {\n        this.target.tagData[this.target.tagData.length] = {\n            tagFacet : 'select tag facet',\n            tagWord : 'select tag word',\n            tagOperation : '=='\n        };\n        this.refresh();\n    }\n\n    tagDataRemove(index) {\n        this.target.tagData.splice(index,1);\n        this.refresh();\n    }\n\n    getCategories() {\n        return this.datasource.metricFindCategoryQuery(this.target)\n            .then(this.transformToSegments(this.target.category, 'select category'));\n        // Options have to be transformed by uiSegmentSrv to be usable by metric-segment-model directive\n    }\n\n    transformToSegments(element, addTemplateVars) {\n        return (results) => {\n            var segments = _.map(results, segment => {\n                return this.uiSegmentSrv.newSegment({ value: segment.text, expandable: segment.expandable });\n            });\n\n            if (element !== addTemplateVars) {\n                segments.unshift(this.uiSegmentSrv.newSegment({ fake: true, value: this.clearSelection, html: addTemplateVars}));\n            }\n            return segments;\n        };\n    }\n\n    testRemove() {\n        this.target.variable = 'select variable';\n        this.getVariables();\n        this.panelCtrl.refresh();\n    }\n\n    getVariables() {\n        return this.datasource.metricFindVariableQuery(this.target)\n            .then(this.transformToSegments(this.target.variable,'select variable'));\n        // Options have to be transformed by uiSegmentSrv to be usable by metric-segment-model directive\n    }\n\n    getDevices() {\n        return this.datasource.metricFindQuery(this.target, 'device')\n            .then(this.transformToSegments(this.target.device,'select device'));\n        // Options have to be transformed by uiSegmentSrv to be usable by metric-segment-model directive\n    }\n\n    getComponents() {\n        return this.datasource.metricFindQuery(this.target, 'component')\n            .then(this.transformToSegments(this.target.component,'select component'));\n        // Options have to be transformed by uiSegmentSrv to be usable by metric-segment-model directive\n    }\n\n    getTagsFacet() {\n        return this.datasource.metricFindQuery(this.target, 'tagFacet')\n            .then(this.transformToSegments(this.target.tagFacet,'select tag facet'));\n        // Options have to be transformed by uiSegmentSrv to be usable by metric-segment-model directive\n    }\n\n    getTagsOperation() {\n        return this.datasource.metricFindTagOperationQuery(this.target)\n            .then(this.transformToSegments(false));\n        // Options have to be transformed by uiSegmentSrv to be usable by metric-segment-model directive\n    }\n\n    getTagsWord(facet) {\n        return this.datasource.metricFindTagWordQuery(this.target, facet)\n            .then(this.transformToSegments(this.target.tagWord, 'select tag word'));\n        // Options have to be transformed by uiSegmentSrv to be usable by metric-segment-model directive\n    }\n\n    toggleEditorMode() {\n        this.target.rawQuery = !this.target.rawQuery;\n    }\n\n    onChangeInternalCategory() {\n        if(this.target.category == this.clearSelection) {\n            this.target.category = 'select category';\n        }\n        this.refresh();\n    }\n    onChangeInternalVariable() {\n        if(this.target.variable == this.clearSelection) {\n            this.target.variable = 'select variable';\n        }\n        this.refresh();\n    }\n    onChangeInternalDevice() {\n        if(this.target.device == this.clearSelection) {\n            this.target.device = 'select device';\n        }\n        this.refresh();\n    }\n    onChangeInternalComponent() {\n        if(this.target.component == this.clearSelection) {\n            this.target.component = 'select component';\n        }\n        this.refresh();\n    }\n    \n\n    onChangeInternalTagFacet(index) {\n        if(this.target.tagData[index].tagWord !== '') {\n            this.target.tagData[index].tagWord = '';\n        }\n        angular.element('#tag-word-'+index).children().children(\"a.tag-word\").html('select tag word');\n        this.refresh();\n    }\n\n    //noinspection JSUnusedLocalSymbols\n    onChangeInternalTagWord(index) {\n        this.refresh();\n    }\n\n    tagOperation(index, operation) {\n        this.target.tagData[index].tagOperation = operation;\n        this.refresh();\n    }\n\n    setSortByEl(element) {\n        this.target.sortByEl = element;\n        this.refresh();\n    }\n\n    setSelector(element) {\n        this.target.selector = element;\n        this.refresh();\n    }\n\n    setAlias() {\n        this.refresh();\n    }\n\n    setResultFormat(element, elementDisplayStr) {\n        this.target.resultFormat = element;\n        this.target.resultFormatDisplay = elementDisplayStr;\n        this.refresh();\n    }\n\n    setColumns() {\n        // console.log(this.target.columns);\n        this.refresh();\n    }\n\n    // setGroup() {\n    //     if (this.target.group == '') {\n    //         if(this.tempNew !== ''){\n    //             this.target.group = this.tempNew;\n    //         }\n    //         else {\n    //             this.target.group = 'select group';\n    //         }\n    //     }\n    //     this.refresh();\n    // }\n\n    refresh() {\n        this.panelCtrl.refresh();\n    }\n\n}\n\nNetSpyGlassDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html';\n\n"]}