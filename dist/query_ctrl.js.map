{"version":3,"sources":["../src/query_ctrl.js"],"names":[],"mappings":"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","file":"query_ctrl.js","sourcesContent":["import {QueryCtrl} from 'app/plugins/sdk';\nimport './css/query-editor.css!'\n\nexport class GenericDatasourceQueryCtrl extends QueryCtrl {\n\n    constructor($scope, $injector, uiSegmentSrv) {\n        super($scope, $injector);\n\n        this.scope = $scope;\n        this.uiSegmentSrv = uiSegmentSrv;\n        this.target.category = this.target.category || 'select category';\n        this.target.variable = this.target.variable || 'select variable';\n        this.target.device = this.target.device || 'select device';\n        this.target.component = this.target.component || 'select component';\n        this.target.tagFacet = this.target.tagFacet || 'select tag facet';\n        this.target.tagOperation = this.target.tagOperation || '==';\n        this.target.tagWord = this.target.tagWord || 'select tag name';\n        this.target.tagData = [{\n            tagFacet : '',\n            tagWord : '',\n            tagOperation : '=='\n        }];\n    }\n\n    tagDataAdd() {\n        this.target.tagData[this.target.tagData.length] = {\n            tagFacet : this.target.tagData.length,\n            tagWord : '',\n            tagOperation : '=='\n        };\n        this.panelCtrl.refresh();\n    }\n\n    tagDataRemove(index) {\n        this.target.tagData.splice(index,1);\n        this.panelCtrl.refresh();\n    }\n\n    categoryRemove() {\n        this.target.category = 'select category';\n        console.log(angular.element( document.querySelector( '#category' ).querySelector('.gf-form-label').text = 'select category' ));\n        this.panelCtrl.refresh();\n    }\n\n    getCategories() {\n        return this.datasource.metricFindCategoryQuery(this.target)\n            .then(this.uiSegmentSrv.transformToSegments(false));\n        // Options have to be transformed by uiSegmentSrv to be usable by metric-segment-model directive\n    }\n\n    getVariables() {\n        return this.datasource.metricFindVariableQuery(this.target)\n            .then(this.uiSegmentSrv.transformToSegments(false));\n        // Options have to be transformed by uiSegmentSrv to be usable by metric-segment-model directive\n    }\n\n    getDevices() {\n        return this.datasource.metricFindDeviceQuery(this.target)\n            .then(this.uiSegmentSrv.transformToSegments(false));\n        // Options have to be transformed by uiSegmentSrv to be usable by metric-segment-model directive\n    }\n\n    getComponents() {\n        return this.datasource.metricFindComponentQuery(this.target)\n            .then(this.uiSegmentSrv.transformToSegments(false));\n        // Options have to be transformed by uiSegmentSrv to be usable by metric-segment-model directive\n    }\n\n    getTagsFacet() {\n        return this.datasource.metricFindTagFacetQuery(this.target)\n            .then(this.uiSegmentSrv.transformToSegments(false));\n        // Options have to be transformed by uiSegmentSrv to be usable by metric-segment-model directive\n    }\n\n    getTagsOperation() {\n        return this.datasource.metricFindTagOperationQuery(this.target)\n            .then(this.uiSegmentSrv.transformToSegments(false));\n        // Options have to be transformed by uiSegmentSrv to be usable by metric-segment-model directive\n    }\n\n    getTagsWord() {\n        return this.datasource.metricFindTagWordQuery(this.target)\n            .then(this.uiSegmentSrv.transformToSegments(false));\n        // Options have to be transformed by uiSegmentSrv to be usable by metric-segment-model directive\n    }\n\n    addAdditionalTags(param) {\n        this.target.tagOperation = param;\n        this.panelCtrl.refresh();\n    }\n\n    toggleEditorMode() {\n        this.target.rawQuery = !this.target.rawQuery;\n    }\n\n    onChangeInternal() {\n        this.panelCtrl.refresh(); // Asks the panel to refresh data.\n    }\n\n    onChangeInternalTagFacet(index) {\n        this.target.tagData[index].tagFacet = this.target.tagFacet;\n        this.panelCtrl.refresh(); // Asks the panel to refresh data.\n    }\n\n    onChangeInternalTagWord(index) {\n        this.target.tagData[index].tagWord = this.target.tagWord;\n        this.panelCtrl.refresh(); // Asks the panel to refresh data.\n    }\n\n    tagOperation(index, operation) {\n        this.target.tagData[index].tagOperation = operation;\n        this.panelCtrl.refresh(); // Asks the panel to refresh data.\n    }\n}\n\nGenericDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html';\n\n"]}